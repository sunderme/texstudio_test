# autogenerated by txs
#include:color
#include:endfloat
#include:ifthen
#include:relsize
#include:tocbibind
#include:xspace
\AlCapFnt#S
\AlCapNameFnt#S
\AlCapNameSty{arg1}#S
\AlCapSty{arg1}#S
\AlFnt#S
\AlTitleFnt#S
\AlTitleSty{arg1}#S
\AlgoLineautorefname#S
\ArgSty{arg1}#S
\BlankLine#S
\CommentSty{arg1}#S
\DataSty{arg1}#S
\DecMargin{arg1}#S
\DontPrintSemicolon#S
\FuncSty{arg1}#S
\Hlne#S
\InOutSizeDefined#S
\IncMargin{arg1}#S
\Indentp{arg1}#S
\Indm#S
\Indmm#S
\Indp#S
\Indpp#S
\KwSty{arg1}#S
\LinesNotNumbered#S
\LinesNumbered#S
\LinesNumberedHidden#S
\NlSty{arg1}#S
\NoCaptionOfAlgo#S
\PrintSemicolon#S
\ProcArgFnt#S
\ProcArgSty{arg1}#S
\ProcFnt#S
\ProcNameFnt#S
\ProcNameSty{arg1}#S
\ProcSty{arg1}#S
\ResetInOut{arg1}#S
\RestoreCaptionOfAlgo#S
\RestyleAlgo{arg1}#S
\SetAlCapFnt{arg1}#S
\SetAlCapHSkip{arg1}#S
\SetAlCapNameFnt{arg1}#S
\SetAlCapNameSty{arg1}#S
\SetAlCapSkip{arg1}#S
\SetAlCapSty{arg1}#S
\SetAlFnt{arg1}#S
\SetAlTitleFnt{arg1}#S
\SetAlTitleSty{arg1}#S
\SetAlgoCaptionLayout{arg1}#S
\SetAlgoCaptionSeparator{arg1}#S
\SetAlgoFuncName{arg1}{arg2}#S
\SetAlgoInsideSkip{arg1}#S
\SetAlgoLined#S
\SetAlgoLongEnd#S
\SetAlgoNlRelativeSize{arg1}#S
\SetAlgoNoEnd#S
\SetAlgoNoLine#S
\SetAlgoProcName{arg1}{arg2}#S
\SetAlgoRefName{arg1}#S
\SetAlgoRefRelativeSize{arg1}#S
\SetAlgoShortEnd#S
\SetAlgoSkip{arg1}#S
\SetAlgoVlined#S
\SetAlgorithmName{arg1}{arg2}{arg3}#S
\SetArgSty{arg1}#S
\SetCommentSty{arg1}#S
\SetDataSty{arg1}#S
\SetEndCharOfAlgoLine{arg1}#S
\SetFillComment#S
\SetFuncSty{arg1}#S
\SetInd{arg1}{arg2}#S
\SetKwArray{arg1}{arg2}#S
\SetKwBlock{arg1}{arg2}{arg3}#S
\SetKwComment{arg1}{arg2}{arg3}#S
\SetKwData{arg1}{arg2}#S
\SetKwFor{arg1}{arg2}{arg3}{arg4}#S
\SetKwFunction{arg1}{arg2}#S
\SetKwHangingKw{arg1}{arg2}#S
\SetKwIF{arg1}{arg2}{arg3}{arg4}{arg5}{arg6}{arg7}{arg8}#S
\SetKwInOut{arg1}{arg2}#S
\SetKwInput{arg1}{arg2}#S
\SetKwRepeat{arg1}{arg2}{arg3}#S
\SetKwSty{arg1}#S
\SetKwSwitch{arg1}{arg2}{arg3}{arg4}{arg5}{arg6}{arg7}{arg8}#S
\SetKw{arg1}{arg2}#S
\SetLine#S
\SetNlSkip{arg1}#S
\SetNlSty{arg1}{arg2}{arg3}#S
\SetNoFillComment#S
\SetNoLine#S
\SetNothing#S
\SetProcArgFnt{arg1}#S
\SetProcArgSty{arg1}#S
\SetProcFnt{arg1}#S
\SetProcNameFnt{arg1}#S
\SetProcNameSty{arg1}#S
\SetProcSty{arg1}#S
\SetSideCommentLeft#S
\SetSideCommentRight#S
\SetTitleSty{arg1}{arg2}#S
\SetVline#S
\SetVlineSkip{arg1}#S
\Setnlskip{arg1}#S
\Setnlsty{arg1}{arg2}{arg3}#S
\ShowLn#S
\ShowLnLabel{arg1}#S
\TitleOfAlgo{arg1}#S
\TitleSty{arg1}#S
\Titleofalgo{arg1}#S
\algocfautorefname#S
\algocffuncautorefname#S
\algocfprocautorefname#S
\algoendfloat#S
\algoheightrule
\algoheightruledefault
\algoplace#S
\algorithmautorefname#S
\algorithmcflinename#S
\algorithmcfname#S
\algotitleheightrule
\algotitleheightruledefault
\begin{algocf}#S
\begin{function}#S
\begin{procedure}#S
\chapter#S
\csname#S
\csname{arg1}#S
\csname{arg1}{arg2}#S
\csname{arg1}{arg2}{arg3}#S
\decmargin{arg1}#S
\dontprintsemicolon#S
\end{algocf}#S
\end{function}#S
\end{procedure}#S
\enl#S
\functionautorefname#S
\incmargin{arg1}#S
\l#S
\linesnotnumbered#S
\linesnumbered#S
\linesnumberedhidden#S
\listalgorithmcfname#S
\listofalgocfs#S
\lnlset{arg1}{arg2}#S
\lnl{arg1}#S
\next#S
\nl#S
\nlSty{arg1}#S
\nllabel{arg1}#S
\nlset{arg1}#S
\nocaptionofalgo#S
\printsemicolon#S
\procedureautorefname#S
\relsize{arg1}#S
\restorecaptionofalgo#S
\restylealgo{arg1}#S
\setLeftLinesNumbers#S
\setRightLinesNumbers#S
\setalcaphskip{arg1}#S
\setalcapskip{arg1}#S
\setnlskip{arg1}#S
\showln#S
\showlnlabel{arg1}#S
\test#S
\theAlgoLine
\theHAlgoLine#S
\theHalgocf#S
\theHalgocffunc#S
\theHalgocfproc#S
\thealgocf
\thealgocfline
\thealgocfproc
\thepostalgo
\vespace#S

# Input, output macros
\KwIn{input}#/algorithm,algorithm*,procedure,procedure*,function,function*
\KwOut{output}#/algorithm,algorithm*,procedure,procedure*,function,function*
\KwData{input}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\KwResult{output}#/algorithm,algorithm*,procedure,procedure*,function,function*

# Basic keywords and blocks
\KwTo#*/algorithm,algorithm*,procedure,procedure*,function,function*
\KwRet{value}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Return{value}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Begin{block-inside}#/algorithm,algorithm*,procedure,procedure*,function,function*
\Begin(begin-comment){block-inside}#/algorithm,algorithm*,procedure,procedure*,function,function*

# comments
\tcc{lines-of-comments}#/algorithm,algorithm*,procedure,procedure*,function,function*
\tcc*{right-justified-side-comment}#/algorithm,algorithm*,procedure,procedure*,function,function*
\tcc*[r]{right-justified-side-comment-with-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcc*[l]{left-justified-side-comment-with-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcc*[f]{right-justified-side-comment-without-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcc*[h]{left-justified-side-comment-without-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcp{lines-of-comments}#/algorithm,algorithm*,procedure,procedure*,function,function*
\tcp*{right-justified-side-comment}#/algorithm,algorithm*,procedure,procedure*,function,function*
\tcp*[r]{right-justified-side-comment-with-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcp*[l]{left-justified-side-comment-with-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcp*[f]{right-justified-side-comment-without-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\tcp*[h]{left-justified-side-comment-without-line-ending}#*/algorithm,algorithm*,procedure,procedure*,function,function*

# if-then-else macros
\If{condition}{then-block}#/algorithm,algorithm*,procedure,procedure*,function,function*
\If(then-comment){condition}{then-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uIf{condition}{then-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uIf(then-comment){condition}{then-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lIf{condition}{then-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lIf(if-comment){condition}{then-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\ElseIf{elseif-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\ElseIf(elseif-comment){elseif-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uElseIf{elseif-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uElseIf(elseif-comment){elseif-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lElseIf{elseif-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lElseif(elseif-line){elseif-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Else{else-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Else(else-comment){else-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uElse{else-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uElse(else-block-comment){else-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lElse{else-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lElse(else-comment){else-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\eIf{condition}{then-block}{else-block}#/algorithm,algorithm*,procedure,procedure*,function,function*
\eIf(then-comment){condition}{then-block}(else-comment){else-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\eIf(then-comment){condition}{then-block}{else-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\eIf{condition}{then-block}(else-comment){else-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\leIf{condition}{then-line}{else-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\leIf(comment){condition}{then-line}{else-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*

# multiple condition selection
\Switch(switch-comment){condition}{switch-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Switch{condition}{switch-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Case{case}{case-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Case(case-comment){case}{case-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uCase{case}{case-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\uCase(case-comment){case}{case-block-without-end}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lCase{case}{case-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lCase(case-comment){case}{case-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Other{otherwise-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Other(otherwise-comment){otherwise-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lOther{otherwise-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lOther(otherwise-comment){otherwise-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*

# loops with test at beginning
\For{condition}{for-block}#/algorithm,algorithm*,procedure,procedure*,function,function*
\For(for-comment){condition}{for-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lFor{condition}{for-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lFor(for-comment){condition}{for-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\While{condition}{while-block}#/algorithm,algorithm*,procedure,procedure*,function,function*
\While(while-comment){condition}{while-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lWhile{condition}{while-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lWhile(while-comment){condition}{while-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\ForEach{condition}{foreach-block}#/algorithm,algorithm*,procedure,procedure*,function,function*
\ForEach(foreach-comment){condition}{foreach-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lForEach{condition}{foreach-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lForEach(foreach-comment){condition}{foreach-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\ForAll{condition}{forall-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\ForAll(forall-comment){condition}{forall-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lForAll{condition}{forall-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lForAll(forall-comment){condition}{forall-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*

# loops with test at end
\Repeat{end-condition}{repeat-block}#/algorithm,algorithm*,procedure,procedure*,function,function*
\Repeat(repeat-comment){end-condition}{repeat-block}(until-comment)#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Repeat(repeat-comment){end-condition}{repeat-block}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\Repeat{end-condition}{repeat-block}(until-comment)#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lRepeat{end-condition}{repeat-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
\lRepeat(repeat-comment){end-condition}{repeat-line}#*/algorithm,algorithm*,procedure,procedure*,function,function*
